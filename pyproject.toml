[project]
name = "flowslide"
version = "1.0.2"
description = "AI-powered presentation generator with enterprise-grade monitoring and backup"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "Apache-2.0"}
authors = [
    {name = "FlowSlide Team", email = "contact@flowslide.dev"},
]
keywords = ["ai", "presentation", "ppt", "fastapi", "openai", "slides"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Office Suites",
]
dependencies = [
    # Core web framework and server
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.0.0",
    "python-multipart>=0.0.6",
    "jinja2>=3.1.2",
    "aiofiles>=23.2.1",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "httpx>=0.25.0",
    "aiohttp>=3.12.4",

    # Database libraries
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "aiosqlite>=0.19.0",
    "psycopg2-binary>=2.9.0",
    "asyncpg>=0.29.0",
    "aiomysql>=0.2.0",  # MySQL async support (optional)

    # Document processing
    "markdown>=3.5.1",
    "python-docx>=1.1.0",
    "pypdf2>=3.0.1",
    "requests>=2.31.0",
    "chardet>=5.0.0",
    "pandas>=2.0.0",
    "beautifulsoup4>=4.12.0",
    "pillow>=10.0.0",

    # AI and LLM libraries
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "google-generativeai>=0.3.0",
    "ollama>=0.1.0",
    "transformers>=4.35.0",
    "torch>=2.0.0",
    "tiktoken>=0.5.0",
    "pdfkit>=1.0.0",

    # LangChain ecosystem
    "langchain>=0.1.0",
    "langchain-core>=0.1.0",
    "langchain-openai>=0.1.0",
    "langchain-anthropic>=0.1.0",
    "langchain-ollama>=0.1.0",
    "langchain-google-genai>=1.0.0",
    "langgraph>=0.2.0",
    "langchain-community>=0.3.27",

    # Search and research libraries
    "tavily-python>=0.7.8",
    "mineru[core]>=2.0.6",
    "markitdown[all]>=0.1.2",
    "onnxruntime>=1.20.0",

    # Browser automation
    "playwright>=1.40.0",

    # Document export
    "apryse-sdk>=11.6.0",

    # Utilities
    "click>=8.0.0",
    "python-dotenv>=1.0.0",
    "rich>=13.0.0",

    # Monitoring and metrics
    "prometheus-client>=0.17.0",
    "prometheus-fastapi-instrumentator>=6.1.0",

    # Cloud storage
    "boto3>=1.34.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "httpx>=0.25.0",
]

[project.scripts]
flowslide = "flowslide.main:main"

[project.urls]
Homepage = "https://github.com/openai118/FlowSlide"
Documentation = "https://github.com/openai118/FlowSlide#readme"
Repository = "https://github.com/openai118/FlowSlide.git"
Issues = "https://github.com/openai118/FlowSlide/issues"
"Docker Hub" = "https://hub.docker.com/r/openai118/flowslide"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/flowslide"]
sources = ["src"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "tests"]

# mypy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "anthropic.*",
    "google.generativeai.*",
    "ollama.*",
    "tavily.*",
    "langchain.*",
    "playwright.*",
    "pdfkit.*",
    "mineru.*",
    "markitdown.*",
    "apryse_sdk.*",
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=src/flowslide",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
    "auth: Authentication tests",
    "api: API tests",
    "database: Database tests",
    "config: Configuration tests",
    "performance: Performance tests",
    "security: Security tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning:passlib.*",
    "ignore::UserWarning:bcrypt.*",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/flowslide"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Bandit configuration
[tool.bandit]
exclude_dirs = ["tests", "venv", "env"]
skips = ["B101", "B601"]