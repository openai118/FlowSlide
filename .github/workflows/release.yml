name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          openai118/flowslide:${{ steps.version.outputs.VERSION }}
          openai118/flowslide:latest
        labels: |
          org.opencontainers.image.title=FlowSlide
          org.opencontainers.image.description=AI-powered presentation generator
          org.opencontainers.image.version=${{ steps.version.outputs.VERSION }}
          org.opencontainers.image.source=https://github.com/openai118/FlowSlide
          org.opencontainers.image.licenses=Apache-2.0

    - name: Generate changelog
      id: changelog
      run: |
        # Simple changelog generation
        echo "## Changes in ${{ steps.version.outputs.VERSION }}" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> CHANGELOG.md || echo "- Initial release" >> CHANGELOG.md

    - name: Prepare docs site (_site)
      run: |
        mkdir -p docs/_site
        # If there's a static docs site already, copy it; otherwise, use docs/index.html as-is
        if [ -f docs/index.html ]; then cp docs/index.html docs/_site/index.html; fi
        # Write version.txt for clients to detect latest
        echo "${{ steps.version.outputs.VERSION }}" > docs/_site/version.txt

    - name: Upload docs site artifact
      uses: actions/upload-artifact@v4
      with:
        name: docs_site
        path: docs/_site

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: FlowSlide ${{ steps.version.outputs.VERSION }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          docs/_site/**
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update Docker Hub Description
      uses: peter-evans/dockerhub-description@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: openai118/flowslide
        readme-filepath: ./DOCKER_DEPLOYMENT.md
