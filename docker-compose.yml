# LandPPT Docker Compose Configuration
# Enhanced version with database health checks

version: '3.8'

services:
  landppt:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: landppt-app
    ports:
      - "8000:8000"
    environment:
      # Application settings
      - PYTHONPATH=/app/src:/opt/venv
      - PLAYWRIGHT_BROWSERS_PATH=/root/.cache/ms-playwright
      
      # Database settings (DATABASE_URL takes priority)
      - DATABASE_URL=postgresql://username:password@host:port/database?sslmode=require&options=-c%20search_path%3Dschema,public
      
      # Alternative: Separate database variables (if DATABASE_URL not set)
      - DB_HOST=${DB_HOST:-your-database-host}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-postgres}
      - DB_USER=${DB_USER:-your_db_user}
      - DB_PASSWORD=${DB_PASSWORD:-your_secure_password}
          
      # API settings (optional, for REST API testing)
      - API_URL=${API_URL:-https://your-api-endpoint.example.com}
      - API_ANON_KEY=${API_ANON_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.your-anon-key}
      - API_SERVICE_KEY=${API_SERVICE_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.your-service-key}
      
      # Storage settings (optional)
      - STORAGE_BUCKET=${STORAGE_BUCKET:-default-bucket}
      - STORAGE_PROVIDER=${STORAGE_PROVIDER:-postgresql}
      
      # Cloudflare R2 Backup Configuration
      - R2_ACCESS_KEY_ID=${R2_ACCESS_KEY_ID}
      - R2_SECRET_ACCESS_KEY=${R2_SECRET_ACCESS_KEY}
      - R2_ENDPOINT=${R2_ENDPOINT}
      - R2_BUCKET_NAME=${R2_BUCKET_NAME}
      - BACKUP_WEBHOOK_URL=${BACKUP_WEBHOOK_URL}
      
      # Health check settings
      - SKIP_DB_CHECK=false
      - REQUIRE_DB=true
      - RUN_DB_SCHEMA_CHECK=true
      
      # Performance settings
      - PYTHONOPTIMIZE=1
      - PYTHONHASHSEED=random
      - PYTHONGC=0
      
    volumes:
      # Persistent data
      - landppt_data:/app/data
      - landppt_uploads:/app/uploads
      - landppt_temp:/app/temp
      - landppt_logs:/app/logs
      
      # Cache directories
      - playwright_cache:/root/.cache/ms-playwright
      
    restart: unless-stopped
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.5'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    # Health check configuration
    healthcheck:
      test: ["CMD", "./docker-healthcheck.sh"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Database health monitoring service
  db-monitor:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: landppt-db-monitor
    entrypoint: ["python3", "/app/database_health_check.py", "--non-interactive"]
    environment:
      # Use DATABASE_URL or separate variables
      - DATABASE_URL=${DATABASE_URL}
      - DB_HOST=${DB_HOST:-your-database-host}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-postgres}
      - DB_USER=${DB_USER:-your_db_user}
      - DB_PASSWORD=${DB_PASSWORD:-your_secure_password}
      
      # API settings for monitoring
      - API_URL=${API_URL}
      - API_SERVICE_KEY=${API_SERVICE_KEY}
    volumes:
      - landppt_logs:/app/logs
    restart: "no"
    profiles:
      - monitoring

volumes:
  landppt_data:
    driver: local
  landppt_uploads:
    driver: local
  landppt_temp:
    driver: local
  landppt_logs:
    driver: local
  playwright_cache:
    driver: local

# Network configuration
networks:
  default:
    name: landppt-network
